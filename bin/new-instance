#!/bin/bash

set -e
set -u
set -o errexit

function canonical_path () {
  pushd "$1" &> /dev/null
  canonical=`pwd -P`
  popd &> /dev/null

  echo "${canonical}"
}

bin_name=$(basename $0)
usage="Usage: ${bin_name} <instance path> <tree root dn>

Example: ${bin_name} ~/slapd-test \"dc=local\""

(test "$1" = "-h" || test "$1" = "--help") && {
  echo "$usage"
  exit 0
}

test "$#" -ne 2 && {
  echo "ERROR: Invalid amount of arguments $#, need 2."
  echo ""
  echo "$usage"
  exit 1
}

instance_path="$1"
tree_root="$2"

ls "${instance_path}" &> /dev/null && {
  echo "ERROR: Given instance path is already present and not empty (${instance_path})"
  echo ""
  echo "Please supply a path that is non-existent or empty."
  exit 1
}

bin_path=$(canonical_path `dirname "$0"`)
ldif_path=$(canonical_path "${bin_path}/../ldif/")

# root DN (bind DN) and password for the database
data_root_dn="cn=root,${tree_root}"
data_root_pw=`date | md5`

# Config database path and root dn password (cn=root,cn=config)
config_d_path="${instance_path}/config.d"
canonical_config_d_path=$(canonical_path "${config_d_path}")
config_d_root_pw=`slappasswd -g`
config_d_root_hash=`slappasswd -v -s "${config_d_root_pw}"`

# Database path, root dn password (cn=root,<tree_root>)
data_d_path="${instance_path}/data.d"
canonical_data_d_path=$(canonical_path "${data_d_path}")
data_d_root_pw=`slappasswd -g`
data_d_root_hash=`slappasswd -v -s "${data_d_root_pw}"`

# Create the instance directory and Get its canonical path
mkdir "${instance_path}"
canonical_instance_path=$(canonical_path "${instance_path}")

# Create instance directories
mkdir -p "${canonical_instance_path}/etc/"{certificates,keys}
mkdir -p "${canonical_instance_path}/ldif"
mkdir -p "${canonical_instance_path}/"{run,log,config.d,data.d}

# Create log and socket file (need to exist before slapd starts)
touch "${canonical_instance_path}/log/slapd.log"
touch "${canonical_instance_path}/run/socket"

# Copy over (all) schema ldifs, the user will decide which ones to load via
# slapadd
cp -r "${ldif_path}/schema" "${canonical_instance_path}/ldif/"


# Copy over selected configuration ldifs with replaced placeholders
cat "${ldif_path}/cn=config.ldif" \
  | sed -e "s|TREE_ROOT_DN|${tree_root}|g" \
        -e "s|INSTANCE_PATH|${canonical_instance_path}|g" \
        -e "s|DATABASE_DIR|${canonical_data_d_path}|g" \
        -e "s|CONFIG_D_PATH|${canonical_config_d_path}|g" \
        -e "s|CONFIG_ROOT_PW|${config_d_root_pw}|g" \
        -e "s|ROOT_PW|${data_d_root_hash}|g" \
  > "${canonical_instance_path}/ldif/cn=config.ldif"

info="
Instance path:                    ${instance_path}
Log file:                         ${instance_path}/log/slapd.log

Configuration database directory: ${config_d_path}
Configuration root bind DN:       cn=root,cn=config
Configuration root password:      ${config_d_root_pw}

Database directory:               ${data_d_path}
Database root bind DN:            cn=root,${tree_root}
Database root password:           ${data_d_root_pw}

Socket directory:                 ${instance_path}/run/socket

Prepared LDIFs:
 - cn=config                      ${instance_path}/ldif/cn=config.ldif
"

echo "${info}" > "${instance_path}/info"

echo "A new slapd instance was created."
echo "${info}"

echo "The above information including bind DNs and passwords was also written"
echo "to ${instance_path}/info"
